import React, { Component } from "react";
import {
  View,
  Image,
  Text,
  Dimensions,
  FlatList,
  TouchableOpacity,
} from "react-native";
import { Icon } from "native-base";
import { Header } from "../../components/header";
import _ from "lodash";
import Dash from "react-native-dash";
import styles from "./styles";
import { color } from "../../theme";

const windowWidth = Dimensions.get("window").width;
const windowHeight = Dimensions.get("window").height;

interface Props {}

const statusList = [
  {
    status: "Request Raised",
    statusTime: "20-03-2019 | 8:30PM",
    statusDescription: "",
    statusType: "success",
  },
  {
    status: "Received by School and Approved",
    statusTime: "21-03-2019 | 10:30AM",
    statusDescription: "",
    statusType: "success",
  },
  {
    status: "Board Approved",
    statusTime: "22-03-2019 | 9:30AM",
    statusDescription: "",
    statusType: "success",
  },
  {
    status: "ICC Generated by Board",
    statusTime: "22-03-2019 | 10:30AM",
    statusDescription: "",
    statusType: "success",
  },
  {
    status: "Candidate Declined",
    statusTime: "23-03-2019 | 8:30AMM",
    statusDescription:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    statusType: "decline",
  },
  {
    status: "Change Request Sent to Board",
    statusTime: "23-03-2019 | 12:30AM",
    statusType: "warn",
  },
  {
    status: "ICC Generated by Board",
    statusTime: "23-03-2019 | 03:30PM",
    statusDescription: "",
    statusType: "stop",
  },
];

class SscVcStatus extends Component<Props> {
  constructor(props: Props) {
    super(props);
    this.state = {};
  }
  onLeft() {
    this.props.navigation.goBack();
  }

  componentDidMount() {}
  renderItem({ item, index }) {
    var IconType;
    var IconName;
    var IconColor;
    if (item.statusType == "success") {
      IconName = "check";
      IconColor = color.successGreen;
    } else if (item.statusType == "decline") {
      IconName = "close";
      IconColor = color.error;
    } else if (item.statusType == "warn") {
      IconName = "exclamation";
      IconColor = color.warnOrange;
    } else {
      IconName = "check";
      IconColor = color.sliverColor;
    }
    return (
      <View>
        <View style={{ flexDirection: "column", borderWidth: 0 }}>
          <View style={{ flexDirection: "row" }}>
            <View
              style={{
                borderWidth: 1.6,
                borderColor: IconColor,
                height: windowWidth * 0.069,
                width: windowWidth * 0.069,
                borderRadius: (windowWidth * 0.069) / 2,
                alignItems: "center",
                justifyContent: "center",
              }}
            >
              <Icon
                type={"MaterialCommunityIcons"}
                name={IconName}
                style={{
                  fontSize: windowWidth * 0.0416,
                  color: IconColor,
                }}
              />
            </View>

            <Text style={styles.statusTitle}>{item.status}</Text>
          </View>
          <View style={{ flexDirection: "row" }}>
            <Dash
              dashColor={color.lightGrey}
              dashStyle={{
                width: index == statusList.length - 1 ? 0 : 1,
                marginLeft: windowWidth * 0.0336,
              }}
              style={{
                flexDirection: "column",
              }}
            />
            <View
              style={{
                flexDirection: "column",
                marginLeft: windowWidth * 0.06,
              }}
            >
              <Text style={styles.statusSubText}>{item.statusTime}</Text>
              <Text style={styles.statusSubText}>{item.statusDescription}</Text>
            </View>
          </View>
        </View>
      </View>
    );
  }

  render() {
    //const { navigate } = this.props
    return (
      <View style={styles.container}>
        <Header onLeftPress={this.onLeft.bind(this)}>SSC VC STATUS</Header>
        <View
          style={{
            flex: 1,
            justifyContent: "center",
          }}
        >
          <FlatList
            contentContainerStyle={{ padding: windowWidth * 0.06 }}
            data={statusList}
            extraData={this.state}
            renderItem={this.renderItem.bind(this)}
          />
        </View>
      </View>
    );
  }
}
export default SscVcStatus;
